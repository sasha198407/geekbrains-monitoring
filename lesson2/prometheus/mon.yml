version: '3.8'
services:
  prometheus:
    image: prom/prometheus:v2.34.0
    container_name: prometheus
    restart: unless-stopped
    user: "root"
    ports:
      - 9090:9090
    volumes:
      - ./cfg/prom/prometheus.yml:/etc/prometheus/prometheus.yml
#      - prom-data:/prometheus
      - ./data/prom:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - mon

  node-exp-host:
    image: prom/node-exporter:v1.3.1
    container_name: node-exp-host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    expose:
      - 9100
    networks:
      - mon

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.36.0
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
#    detach:
#      - true
    privileged: true
#    device: /dev/kmsg
    ports:
      - 8080:8080
    expose:
      - 8080
    networks:
      - mon

  grafana:
    image: grafana/grafana:8.4.5
    container_name: grafana
#    user: "472"
    user: "root"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
#      - graf-data:/var/lib/grafana
      - ./data/graf:/var/lib/grafana
      - ./cfg/graf/prov/:/etc/grafana/provisioning/
    env_file:
      - ./cfg/graf/config.monitoring
    networks:
      - mon
    restart: always

#volumes:
#  prom-data:
#    name: prom-data
#    driver_opts:
#      type: local
#      device: ${PWD}/data/prom
#      o: bind

#  graf-data:
#    name: graf-data
#    driver_opts:
#      type: local
#      device: ${PWD}/data/graf
#      o: bind

networks:
  mon:
    name: mon
